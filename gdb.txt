+run
Starting program: /home/roghan/repo/minesweeper/bin/minesweeper 

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at src/main.cpp:8
8	{
+q
Quit
The program is not being run.
Starting program: /home/roghan/repo/minesweeper/bin/minesweeper 

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/x86_64-linux-gnu/libthread_db.so.1".
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/libpulse.so.0
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon-16.1.so
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/libcap.so.2

Breakpoint 1, main () at src/main.cpp:8
8	{
9	    if (SDL_Init(SDL_INIT_VIDEO) != 0)
15	    SDL_Window *window = SDL_CreateWindow("Minesweeper",
19	    if (!window)
26	    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
warning: could not find '.gnu_debugaltlink' file for /usr/lib/x86_64-linux-gnu/libtinfo.so.6
27	    if (!renderer)
35	    bool running = true;
37	    int mouseX = 0, mouseY = 0;
39	    bool cellIsClicked = false;
40	    std::vector<std::vector<Node>> mine_grid = grid();
grid () at src/game.cpp:14
14	std::vector<std::vector<Node>> grid() {
15	    int rows = 16;
16	    int cols = 30;
17	    std::vector<std::vector<Node>> grid(rows, std::vector<Node>(cols));
std::allocator<std::vector<Node, std::allocator<Node> > >::allocator (this=<optimized out>) at /usr/include/c++/13/bits/allocator.h:163
163	      allocator() _GLIBCXX_NOTHROW { }
std::__new_allocator<std::vector<Node, std::allocator<Node> > >::__new_allocator (this=0x7fffffffdb77) at /usr/include/c++/13/bits/new_allocator.h:88
88	      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
std::allocator<std::vector<Node, std::allocator<Node> > >::allocator (this=<optimized out>) at /usr/include/c++/13/bits/allocator.h:163
163	      allocator() _GLIBCXX_NOTHROW { }
grid () at src/game.cpp:17
17	    std::vector<std::vector<Node>> grid(rows, std::vector<Node>(cols));
Quit
